#include <stdio.h>
int stack[100],top=-1;
int n =100;
void push();
void pop();
void show();
int peek();
void main ()
{
      push(5);
      push(3);
      push(6);
      push(9);
      push(8);
      show();
      pop();
      show();
      pop();
      show();
      printf("%d", peek());

}

void push (int val)
{
    if (top == n )
    printf("\n Overflow");
    else
    {
        top = top +1;
        stack[top] = val;
    }
}

void pop ()
{

    if(top == -1)
    printf("Underflow");
    else
    top = top -1;
}
void show()
{
    int i;
    for (i=top;i>=0;i--)
    {
        printf("%d ",stack[i]);
    }
    printf("\n");
    if(top == -1)
    {
        printf("Stack is empty");
    }
}
int peek()
{
    if (top == -1)
    {
        printf("Underflow");
        return 0;
    }
    else
    {
        return stack [top];
    }
}






*****************************************
#include <stdio.h>
#include <stdlib.h>

struct Node* top = NULL;

struct Node{

    int data;
    struct Node* next;
};

void push(int value)
{
   struct Node *newNode;
   newNode = (struct Node*)malloc(sizeof(struct Node));
   if(newNode == NULL){
    exit(1);
   }
   newNode->data = value;
   if(top == NULL)
      newNode->next = NULL;
   else
      newNode->next = top;
      top = newNode;
   //printf("\n Success\n");
}

void pop()
{
   if(top == NULL)
      printf("\n Stack is Empty\n");
   else{
      struct Node *temp = top;
      int data = temp->data;

      top = temp->next;
      free(temp);
      printf("\nDeleted element: %d\n", data);
   }
}

void display()
{
   if(top == NULL)
      printf("\nStack is Empty\n");
   else{
      struct Node *temp = top;
      while(temp != NULL){
	 printf("%d--->",temp->data);
	 temp = temp -> next;
      }
   }
}
void main ()
{
      push(5);
      push(3);
      push(6);
      push(9);
      push(8);
      display();
      pop();
      display();
      pop();
      display();

}
